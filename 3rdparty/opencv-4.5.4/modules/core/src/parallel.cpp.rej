--- modules/core/src/parallel.cpp	2021-10-09 08:48:26.000000000 +0800
+++ modules/core/src/parallel.cpp	2021-11-24 11:00:30.810463640 +0800
@@ -333,29 +333,9 @@ namespace {
             CV_TRACE_ARG_VALUE(range_end, "range.end", (int64)r.end);
 #endif
 
-            try
             {
                 (*ctx.body)(r);
             }
-#if CV__EXCEPTION_PTR
-            catch (...)
-            {
-                ctx.recordException();
-            }
-#else
-            catch (const cv::Exception& e)
-            {
-                ctx.recordException(e.what());
-            }
-            catch (const std::exception& e)
-            {
-                ctx.recordException(e.what());
-            }
-            catch (...)
-            {
-                ctx.recordException("Unknown exception");
-            }
-#endif
 
             if (!ctx.is_rng_used && !(cv::theRNG() == ctx.rng))
                 ctx.is_rng_used = true;
@@ -501,16 +481,10 @@ void parallel_for_(const cv::Range& rang
       isNotNestedRegion = !flagNestedParallelFor.exchange(true);
     if (isNotNestedRegion)
     {
-        try
         {
             parallel_for_impl(range, body, nstripes);
             flagNestedParallelFor = false;
         }
-        catch (...)
-        {
-            flagNestedParallelFor = false;
-            throw;
-        }
     }
     else // nested parallel_for_() calls are not parallelized
     {
